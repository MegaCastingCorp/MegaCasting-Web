security:
    encoders:
        App\Entity\Users:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\Users
                property: Email
    firewalls:
        public:
            pattern: ^/inscription
            anonymous: true
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            user_checker: App\Security\UserChecker
            anonymous: false
            lazy: true
            provider: in_database

            form_login:
                login_path: security_login
                check_path: security_login

            logout:
                path: security_logout
                target: security_login
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         #- { path: ^/admin, roles: ROLE_ADMIN }
         #- { path: ^/profil, roles: ROLE_USER }

    # La partie role_hierarchy contient la hiérarchie des rôles
    # Un éditeur sera également utilisateur
    # Un administrateur sera également éditeur et donc utilisateur
    role_hierarchy:
        ROLE_CLIENT: ROLE_USER
        ROLE_ADMIN: ROLE_CLIENT
